import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import hiplot as hip
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import json
import plotly.io as pio
from PIL import Image
import streamlit.components.v1 as components
import joblib

#set theme
theme = st.sidebar.radio("Select Theme", ["Light", "Dark"], horizontal=True)
light_theme = """
    <style>
        body { background-color: white; color: black; }
        .stApp { background-color: white; }
        .stSidebar { background-color: #f0f2f6 !important; } 
    </style>
"""
dark_theme = """
    <style>
        body { background-color: black; color: #E0E0E0; }  
        .stApp { background-color: black; }
        section[data-testid="stSidebar"] {
            background-color: #1E1E1E !important;
        }
        section[data-testid="stSidebar"] * {
            color: #E0E0E0 !important;
        }
        h1, h2, h3, h4, h5, h6, p, div, span, label { 
            color: #E0E0E0 !important;  
        }
        section[data-testid="stSidebar"] .stSelectbox div[data-testid="stMarkdownContainer"] * {
            color: #E0E0E0 !important; 
        }
        section[data-testid="stSidebar"] .stSelectbox div[data-baseweb="select"] * {
            color: black !important;  /* Fix for dropdown options */
        }
    </style>
"""
if theme == "Dark":
    st.markdown(dark_theme, unsafe_allow_html=True)
else:
    st.markdown(light_theme, unsafe_allow_html=True)


#add navigation sidebar
st.sidebar.title("ðŸ”ŽExplore")
page = st.sidebar.selectbox("Select a page:", ["Homepage", "Evaluate Text", "Model & Insights"], index=0)
for _ in range(15):  # Change 10 to the number of empty lines you want
    st.sidebar.write("")
st.sidebar.write("View the code and dataset details: https://github.com/mahnoorsheikh16")

#set page content
if page == "Homepage": 
    st.header('AI or Human? A Machine Learning Approach to Text Classification for StatisticalÂ Courses')
    st.write("")
    st.write("Welcome to the AI Detection app! Designed for faculty, this tool allows you to upload student responses and predict whether they are AI-generated.")
    st.write("**Why?** With the rise of large language models (LLMs) like ChatGPT, distinguishing between human and AI-generated text has become increasingly important in academic settings. This tool helps maintain academic integrity by providing insights into the authenticity of student submissions.") 
    st.write("")
    st.write("**App Layout:**")
    st.write("**Upload and Evaluate Text**: Navigate to the â€˜Evaluate Textâ€™ page (from the left-hand menu) to submit text and verify its authenticity.")
    st.write("**Learn About the Model and Key Trends**: Visit the â€˜Model & Insightsâ€™ page to explore critical patterns and a detailed breakdown of the model behind the analysis.")
    
elif page == "Evaluate Text":
    user_input = st.text_input("Enter Text:")
    # apply novel model on user_input >> should return class (AI or human)
    # probability of AI if AI class predicted
    if user_input:
        st.write(f"You entered: {user_input}")
        #if result == "AI":
            #st.write("This text is AI generated:()")
            #st.write("AI percentage: xx")
        #if result == "Human":
            #st.write("This text is written by a human:)")

elif page == "Model & Insights":
    st.subheader("Understanding the Model's Inner Workings")
    st.write("Identifying AI generated text is the primary focus and ____ classifier trained on derived data is used for this problem.")
    st.write("Nagivate to the tabs below to gain a deeper understanding of the key insights and model's structure.")
    tab1, tab2, tab3 = st.tabs(["Data Overview", "Analysis & Insights", "Modelling & Results"])
    st.write("")
    
    with tab1:
        st.write("**Dataset details:**")
        st.write("[AI classifier dataset](https://data.mendeley.com/datasets/mh892rksk2/4) contains responses to 116 questions, with contributions from both human and AI sources. It has _____ instances across 3 attributes, and the attributes have string data types. The attribute summary is as follows:")
        st.write("Question: The original question asked")
        st.write("Human: Response written by a randomly chosen human")
        st.write("AI: Response generated by an LLM")
        st.write("Since the dataset cannot be used in its raw form for model training, it has undergone an exhaustive feature engineering process (highlighted below).")
        st.write("")
        st.write("**Feature Engineering:**")
        st.write("hh")
        
    with tab2:
        st.write("*Add EDA*")

    with tab3:
        st.write("For comprehensive results, the performance of x and y machine learning models is evaluated on the training dataset.")
        st.write("**Best Model Overall:** xx Classifier for accurately distinguising between the two classes ...")
        tab1, tab2 = st.tabs(["Baseline Model: xx", "Novel Model: xx"])
        st.write("")  

        with tab1:  
            st.write("baseline model deets")

        with tab2:  
            st.write("novel model deets")